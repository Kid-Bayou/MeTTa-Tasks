> (: propagateNot (-> $expr $expr))
(= (propagateNot $expr)
    (case (if (or (== (car-atom $expr) AND)
                (== (car-atom $expr) OR)      )
            ( (car-atom $expr) (cdr-atom $expr))
            $expr
        )
    (
        ( (AND $args) (let $val (if (== $args ()) ()
                    (let* ( ($head (car-atom $args))
                            ($tail (cdr-atom $args))
                            ($head-new (propagateNot $head))
                            ($tail-new (propagateNot $tail))
                        )
                    (cons-atom $head-new $tail-new)
                )
        ) (cons-atom AND $val)))
( (OR $args) (let $val (if (== $args ()) ()
            (let* ( ($head (car-atom $args))
                    ($tail (cdr-atom $args))
                    ($head-new (propagateNot $head))
                    ($tail-new (propagateNot $tail))
                )
            (cons-atom $head-new $tail-new)
        )
) (cons-atom OR $val)))
( (NOT $a)
    (case $a
        (
            ( (AND $args) (let $val (if (== $args ()) ()
                        (let* ( ($head (car-atom $args))
                                ($tail (cdr-atom $args))
                                ($head-new (propagateNot (NOT $head)))
                                ($tail-new (propagateNot (NOT $tail)))
                            )
                        (cons-atom $head-new $tail-new)
                    )
            ) (cons-atom OR $val)))
( (OR $args) (let $val (if (== $args ()) ()
            (let* ( ($head (car-atom $args))
                    ($tail (cdr-atom $args))
                    ($head-new (propagateNot (NOT $head)))
                    ($tail-new (propagateNot (NOT $tail)))
                )
            (cons-atom $head-new $tail-new)
        )
) (cons-atom AND $val)))
( (NOT $b) (propagateNot $b))
($symbol (NOT $symbol))
)
)
)
($symbol (if (== (get-metatype $expr) Expression)
        (if (== $expr ()) ()
            (let* ( ($head (car-atom $expr))
                    ($tail (cdr-atom $expr))
                    ($head-new (propagateNot $head))
                    ($tail-new (propagateNot $tail))
                )
            (cons-atom $head-new $tail-new)
        )

)
$expr
))
)
)
)

! (propagateNot (AND a b (NOT (NOT b))))
! (propagateNot (NOT c))
! (propagateNot (NOT (NOT c)))
! (propagateNot (AND (NOT (NOT a)) b (OR a b (NOT 6))))
